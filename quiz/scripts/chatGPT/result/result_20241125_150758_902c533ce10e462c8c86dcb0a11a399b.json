[
  {
    "No": "6",
    "question": "小売会社が、ビジネスパートナーである他社に一連のデータファイルを提供する必要があります。これらのファイルは小売会社が所有するAWSアカウント（アカウントA）のAmazon S3バケットに保存されています。ビジネスパートナー会社は、自社のAWSアカウント（アカウントB）に属するIAMユーザーUser_DataProcessorに、これらのファイルへアクセスさせたいと考えています。\nUser_DataProcessor がS3バケットに正常にアクセスできるようにするために、両社が実行すべき手順を次の中から2つ選択してください。",
    "choices": [
      {
        "key": "A",
        "text": "アカウントAのS3バケットでクロスオリジンリソース共有（CORS）機能をオンにします。"
      },
      {
        "key": "B",
        "text": "アカウントAで以下のS3バケットポリシーを設定します: [image_1_0] [image_1_1] [image_1_2]"
      },
      {
        "key": "C",
        "text": "アカウントAで以下のS3バケットポリシーを設定します: [image_1_0] [image_1_1] [image_1_2]"
      },
      {
        "key": "D",
        "text": "アカウントBでUser_DataProcessorの権限を以下のように設定します: [image_1_0] [image_1_1] [image_1_2]"
      },
      {
        "key": "E",
        "text": "アカウントBでUser_DataProcessorの権限を以下のように設定します: [image_1_0] [image_1_1] [image_1_2]"
      }
    ],
    "answer_key": "D",
    "community_vote_distribution": "C (73%) D (23%)",
    "page_images": [
      "image_1_0.png",
      "image_1_1.png",
      "image_1_2.png",
      "image_1_3.png"
    ],
    "explanation": {
      "answer_and_key_points": "正解はDとCである。この設問では二つの選択肢を選ぶ必要があり、アカウントAとアカウントBの協力が必要である。アカウントA側ではS3バケットのポリシーを適切に構成（C）、アカウントB側ではユーザー権限を代理アクセス用に設定する必要がある（D）。",
      "situation_analysis": "問題の背景として、アカウントAのS3バケットに保存されたデータファイルへ、アカウントBのIAMユーザーがアクセスする必要がある。これを実現するためには、（1）アカウントAでの適切なバケットポリシー設定と、（2）アカウントBでのIAMユーザーへの適切な権限付与が要求される。",
      "option_analysis": {
        "A": "CORSはWebブラウザとの通信に関する制御であり、このケースでは直接的な関係はない。誤り。",
        "B": "Cと同じくS3バケットポリシーの一部設定だが、具体的な制約条件に適していない可能性がある。選択肢Cのみで十分。",
        "C": "S3バケットポリシーで、アカウントBのユーザー/ロールを明示的に許可することが必要であり、この要素は正解である。",
        "D": "アカウントB側のIAMユーザーに対する適切な権限設定が必要。これによりUser_DataProcessorがアカウントAのリソースにアクセスできる。正解。",
        "E": "同様のIAMユーザー設定例がEでも述べられているが、設定内容が具体的要件に適合していない可能性が高いため、Dが優先される。誤り。"
      },
      "additional_knowledge": "AWS S3 クロスアカウントアクセスを確立するためには、リソースベースポリシー（S3バケットポリシー）をアカウントA側で設定し、リクエスターが所属するアカウントBでIAMポリシーを設定する必要がある。この方法を通じて、適切な権限移譲およびリソース保護を実現できる。",
      "key_terminology": [
        "Amazon S3 (オブジェクトストレージサービス)",
        "Bucket Policy (バケットポリシー)",
        "IAM (アイデンティティとアクセス管理)",
        "Cross Account Access (クロスアカウントアクセス)"
      ],
      "overall_assessment": "この設問は、AWSのクロスアカウントアクセス設定の基本を理解しているかを試す良問である。一方、コミュニティの投票結果を見ると、選択肢C（73%）に偏っており、Dへの理解が不十分な可能性がある。アカウントBでの設定がないと完全なアクセス権構成とならないため、両方を選択する必要があることを注意すべきである。"
    },
    "keywords": [
      "Amazon S3 (オブジェクトストレージサービス)",
      "IAM (アイデンティティとアクセス管理)",
      "Bucket Policy (バケットポリシー)",
      "Cross Account Access (クロスアカウントアクセス)"
    ]
  },
  {
    "No": "57",
    "question": "複数のAWSアカウントを持つ企業がAWS Organizationsおよびサービスコントロールポリシー（SCP）を使用している。管理者が以下のSCPを作成し、AWSアカウント1111-1111-1111を含むOU（組織単位）に添付しました。アカウント1111-1111-1111で働く開発者たちはAmazon S3バケットを作成できないと訴えています。管理者はこの問題にどのように対処すべきですか？",
    "choices": [
      {
        "key": "A",
        "text": "SCPにs3:CreateBucketを「Allow」効果付きで追加する。[image_3_0]"
      },
      {
        "key": "B",
        "text": "アカウントをOUから削除し、SCPをアカウント1111-1111-1111に直接添付する。"
      },
      {
        "key": "C",
        "text": "Amazon S3権限を開発者のIAMエンティティに追加するよう指示する。"
      },
      {
        "key": "D",
        "text": "アカウント1111-1111-1111からSCPを削除する。"
      }
    ],
    "answer_key": "C",
    "community_vote_distribution": "C (84%) A (16%)",
    "page_images": [
      "image_3_0.png"
    ],
    "explanation": "正しい回答はCです。サービスコントロールポリシー（SCP）は、アカウント内で許可されるアクションの最大の境界を定義します。SCPが許可していても、IAMポリシーが対応する権限を付与しなければ、そのアクションは実行できません。この場合、SCPにはAmazon S3バケット作成を明示的に拒否するポリシーが含まれておらず、アカウント内のIAMエンティティに適切なAmazon S3権限が追加されている必要があります。開発者がAmazon S3にアクセスできない理由は、IAMエンティティに必要な権限が設定されていないからです。それを解決するには、IAMエンティティにAmazon S3の権限を追加する必要があります。\n\n---\n\n状況解析:\n- SCPはアクションの最大許可境界を指定する。\n- 現在のSCPがs3:CreateBucketを明示的にブロックしているわけではない。\n- 実際の権限管理はIAMポリシーによる。\n\n選択肢分析:\n- A: SCPに許可を追加してもIAMポリシーが必要なため、エラーは解消されない。\n- B: アカウントをOUから取り除くことで適用されるSCPが変わるが、これは問題解決として適切ではない。\n- C: 正解。IAMエンティティにAmazon S3権限を追加する必要がある。\n- D: SCPを削除することは推奨されないし、適切でない。\n\n追加知識:\nSCP (Service Control Policies) は、AWS Organizations内で管理を効率化するために使用されるが、IAMポリシーやロール設定と連動することで初めて実際のリソース操作制御が可能になる。\n\n重要用語:\n- SCP (サービスコントロールポリシー)：Service Control Policies（管理ポリシー）\n- IAMポリシー：Access Managementポリシー\n- Amazon S3（S3バケット作成）\n- Resource-Based Policy（リソース・ベースのポリシー）\n\n全体評価：\nこの質問はAWS OrganizationsとSCPの役割の理解、及びIAMとの関係を試験する上で適切である。回答率（84％）は理解度が比較的高いことを示すが、誤回答の選択肢Aを選んだ受験者が16％いる点で、更なる知識向上が望まれる。"
  },
  {
    "No": "58",
    "question": "会社はその事業運営にとって重要なモノリシックアプリケーションを運用している。会社は、このアプリケーションをAmazon Linux 2を実行するAmazon EC2インスタンス上でホストしている。その会社のアプリケーションチームは、法務部門からの指示を受けて、インスタンスの暗号化されたAmazon Elastic Block Store（Amazon EBS）ボリュームからAmazon S3バケットにデータをバックアップするよう求められた。しかし、アプリケーションチームはインスタンスへの管理用SSHキーを所有していない。なお、アプリケーションは利用ユーザーへの配信を継続する必要がある。この要件を満たすための解決策はどれか？",
    "choices": [
      {
        "key": "A",
        "text": "インスタンスにAmazon S3への書き込み権限を持つロールをアタッチする。AWS Systems ManagerのSession Managerオプションを使用してアクセスする。"
      },
      {
        "key": "B",
        "text": "再起動オプションをオンにしてインスタンスのイメージを作成する。イメージから新しいEC2インスタンスを起動し、新しいインスタンスに権限を付与する。"
      },
      {
        "key": "C",
        "text": "Amazon Data Lifecycle Manager（Amazon DLM）を使用してEBSボリュームのスナップショットを取得し、そのデータをAmazon S3にコピーする。"
      },
      {
        "key": "D",
        "text": "インスタンスのイメージを作成する。イメージから新しいEC2インスタンスを起動し、Amazon S3への書き込み権限を持つロールを新しいインスタンスにアタッチする。"
      }
    ],
    "answer_key": "A",
    "community_vote_distribution": "A (63%) C (36%)",
    "page_images": [
      "image_3_0.png"
    ],
    "explanation": {
      "answer_and_key_points": "正解はAである。この解決策は、アプリケーションの可用性を中断することなく、S3バケットへのデータバックアップを実現する。Session Managerを使用することで、SSHキーなしでも安全にインスタンスへアクセスできる。",
      "situation_analysis": {
        "requirements": "EBSボリュームのデータをS3にバックアップすること。アプリケーションは動作を継続する必要がある。SSHキーは使用不可。",
        "constraints": "データの暗号化状態を維持しつつ、アプリケーションの中断を避けること。"
      },
      "option_analysis": {
        "A": "正しい。 Session ManagerはSSHなしでインスタンスへの安全なアクセスを可能にし、IAMロールを使用してS3へのデータ転送を実現する。",
        "B": "誤り。再起動によるアプリケーションの中断が発生する可能性があり、要件を満たさない。",
        "C": "誤り。DLMでスナップショットを取得するだけでは、直接的にS3へのデータバックアップを保証しない。",
        "D": "誤り。この手順は複雑で、アプリケーションが中断する可能性がある。"
      },
      "additional_knowledge": {
        "services": {
          "AWS Systems Manager Session Manager": "SSHやRDPなしで安全なアクセスを提供する管理ツール。",
          "Amazon S3": "スケーラブルなオブジェクトストレージサービス。",
          "Amazon EBS": "アプリケーションのストレージ要件に応える高性能ブロックストレージサービス。"
        },
        "practical_insights": "Session Managerの導入は、SSHキー管理の負担を軽減し、セキュリティを向上させる。"
      },
      "keywords": [
        "AWS Systems Manager Session Manager（AWSシステムマネージャー セッションマネージャー）",
        "Amazon S3（アマゾンエスリー）",
        "Amazon EC2（アマゾンEC2）",
        "Amazon EBS（アマゾンEBS）",
        "IAM Role（IAMロール）"
      ],
      "overall_assessment": "問題は具体的で現実のシナリオに根差しており、Session Managerの機能を試す良い機会。コミュニティ意見（63％）と公式解答（A）が一致しているため、概ね妥当であると考えられる。"
    }
  },
  {
    "No": "96",
    "question": "ソリューションアーキテクトは、新しいAmazon S3バケットに保存するオブジェクトに対してクライアントサイド暗号化メカニズムを実装する必要があります。ソリューションアーキテクトは、この目的のためAWS Key Management Service (AWS KMS)に保存されたカスタマーマスターキー (CMK) を作成しました。\nソリューションアーキテクトは以下のIAMポリシーを作成し、それをIAMロールにアタッチしました。\nテスト中、ソリューションアーキテクトはS3バケット内の既存のテストオブジェクトを正常に取得できました。しかし、新しいオブジェクトのアップロードを試みた際、操作が禁止されたというエラーメッセージが表示されました。\nこの要件をすべて満たすために、ソリューションアーキテクトはIAMポリシーにどのアクションを追加する必要がありますか？",
    "choices": [
      {
        "key": "A",
        "text": "kms:GenerateDataKey"
      },
      {
        "key": "B",
        "text": "kms:GetKeyPolicy"
      },
      {
        "key": "C",
        "text": "kms:GetPublicKey"
      },
      {
        "key": "D",
        "text": "kms:Sign"
      }
    ],
    "answer_key": "A",
    "community_vote_distribution": "A (100%)",
    "explanation": "正しい答えはAの「kms:GenerateDataKey」である。\n\n【答えとポイント】\nこの選択肢は、オブジェクトをクライアント側で暗号化する際にデータ暗号化キーを生成するために必要な権限を提供する。Amazon S3にオブジェクトをアップロードする際に、AWS KMSを使用してデータキーを生成することを求められるため、このアクションが必要となる。\n\n【状況分析】\n設問では、新しいS3バケットに対するクライアントサイド暗号化が必要であり、すでに存在するオブジェクトの取得には成功した一方で、新しいオブジェクトのアップロードには失敗したことが述べられている。このエラーは、AWS KMSキーで暗号化に必要な「kms:GenerateDataKey」アクションが欠落していることが原因である。\n\n【選択肢ごとの分析】\n- A: kms:GenerateDataKey\n  適切。AWS KMSを利用してクライアントがデータキーを生成できるようにする。\n- B: kms:GetKeyPolicy\n  ポリシーを取得するためのアクションであり、暗号化の実行には直接関与しない。\n- C: kms:GetPublicKey\n  AWS KMSによる公開鍵の取得に関連するが、クライアントサイド暗号化には不要。\n- D: kms:Sign\n  暗号化ではなく、デジタル署名を行うアクション。要件と無関係。\n\n【追加知識】\nクライアントサイド暗号化では、通常、データの暗号化と復号化をクライアント側で行う。このプロセスには、AWS KMSの「kms:GenerateDataKey」アクションを利用して暗号化キーを生成する必要がある。また、AWS KMSに適切なポリシーが設定されていない場合は、エラーメッセージの一因となる。\n\n【キーワード】\n- AWS Key Management Service (KMS) (AWS キー管理サービス)\n- Client-Side Encryption (クライアントサイド暗号化)\n- Data Key (データキー)\n- Amazon S3\n- kms:GenerateDataKey (kms:データキー生成)"
  }
]